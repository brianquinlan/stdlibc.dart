// ignore_for_file: non_positive_array_dimension, unused_field

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bionic C Library
class BionicLibC {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  BionicLibC(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  BionicLibC.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int fstat(
    int __fd,
    ffi.Pointer<stat_t> __buf,
  ) {
    return _fstat(
      __fd,
      __buf,
    );
  }

  late final _fstatPtr = _lookup<
      ffi
      .NativeFunction<ffi.Int Function(ffi.Int, ffi.Pointer<stat_t>)>>('fstat');
  late final _fstat =
      _fstatPtr.asFunction<int Function(int, ffi.Pointer<stat_t>)>();

  int lstat(
    ffi.Pointer<ffi.Char> __path,
    ffi.Pointer<stat_t> __buf,
  ) {
    return _lstat(
      __path,
      __buf,
    );
  }

  late final _lstatPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>, ffi.Pointer<stat_t>)>>('lstat');
  late final _lstat = _lstatPtr
      .asFunction<int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<stat_t>)>();

  int stat(
    ffi.Pointer<ffi.Char> __path,
    ffi.Pointer<stat_t> __buf,
  ) {
    return _stat(
      __path,
      __buf,
    );
  }

  late final _statPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>, ffi.Pointer<stat_t>)>>('stat');
  late final _stat = _statPtr
      .asFunction<int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<stat_t>)>();
}

const int BIG_ENDIAN = 4321;

const int BUFSIZ = 1024;

const int BUS_ADRALN = 1;

const int BUS_ADRERR = 2;

const int BUS_NOOP = 0;

const int BUS_OBJERR = 3;

const int BYTE_ORDER = 1234;

const int CLD_CONTINUED = 6;

const int CLD_DUMPED = 3;

const int CLD_EXITED = 1;

const int CLD_KILLED = 2;

const int CLD_NOOP = 0;

const int CLD_STOPPED = 5;

const int CLD_TRAPPED = 4;

const int CPUMON_MAKE_FATAL = 4096;

const int EOF = -1;

const int EXIT_FAILURE = 1;

const int EXIT_SUCCESS = 0;

const int FD_SETSIZE = 1024;

const int FILENAME_MAX = 1024;

const int FOOTPRINT_INTERVAL_RESET = 1;

const int FOPEN_MAX = 20;

const int FPE_FLTDIV = 1;

const int FPE_FLTINV = 5;

const int FPE_FLTOVF = 2;

const int FPE_FLTRES = 4;

const int FPE_FLTSUB = 6;

const int FPE_FLTUND = 3;

const int FPE_INTDIV = 7;

const int FPE_INTOVF = 8;

const int FPE_NOOP = 0;

const int ILL_BADSTK = 8;

const int ILL_COPROC = 7;

const int ILL_ILLADR = 5;

const int ILL_ILLOPC = 1;

const int ILL_ILLOPN = 4;

const int ILL_ILLTRP = 2;

const int ILL_NOOP = 0;

const int ILL_PRVOPC = 3;

const int ILL_PRVREG = 6;

const int INT16_MAX = 32767;

const int INT16_MIN = -32768;

const int INT32_MAX = 2147483647;

const int INT32_MIN = -2147483648;

const int INT64_MAX = 9223372036854775807;

const int INT64_MIN = -9223372036854775808;

const int INT8_MAX = 127;

const int INT8_MIN = -128;

const int INTMAX_MAX = 9223372036854775807;

const int INTMAX_MIN = -9223372036854775808;

const int INTPTR_MAX = 9223372036854775807;

const int INTPTR_MIN = -9223372036854775808;

const int INT_FAST16_MAX = 32767;

const int INT_FAST16_MIN = -32768;

const int INT_FAST32_MAX = 2147483647;

const int INT_FAST32_MIN = -2147483648;

const int INT_FAST64_MAX = 9223372036854775807;

const int INT_FAST64_MIN = -9223372036854775808;

const int INT_FAST8_MAX = 127;

const int INT_FAST8_MIN = -128;

const int INT_LEAST16_MAX = 32767;

const int INT_LEAST16_MIN = -32768;

const int INT_LEAST32_MAX = 2147483647;

const int INT_LEAST32_MIN = -2147483648;

const int INT_LEAST64_MAX = 9223372036854775807;

const int INT_LEAST64_MIN = -9223372036854775808;

const int INT_LEAST8_MAX = 127;

const int INT_LEAST8_MIN = -128;

const int IOPOL_APPLICATION = 5;

const int IOPOL_ATIME_UPDATES_DEFAULT = 0;

const int IOPOL_ATIME_UPDATES_OFF = 1;

const int IOPOL_DEFAULT = 0;

const int IOPOL_IMPORTANT = 1;

const int IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = 0;

const int IOPOL_MATERIALIZE_DATALESS_FILES_OFF = 1;

const int IOPOL_MATERIALIZE_DATALESS_FILES_ON = 2;

const int IOPOL_NORMAL = 1;

const int IOPOL_PASSIVE = 2;

const int IOPOL_SCOPE_DARWIN_BG = 2;

const int IOPOL_SCOPE_PROCESS = 0;

const int IOPOL_SCOPE_THREAD = 1;

const int IOPOL_STANDARD = 5;

const int IOPOL_THROTTLE = 3;

const int IOPOL_TYPE_DISK = 0;

const int IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES = 9;

const int IOPOL_TYPE_VFS_ATIME_UPDATES = 2;

const int IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY = 10;

const int IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION = 6;

const int IOPOL_TYPE_VFS_IGNORE_PERMISSIONS = 7;

const int IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = 3;

const int IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE = 8;

const int IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = 4;

const int IOPOL_TYPE_VFS_TRIGGER_RESOLVE = 5;

const int IOPOL_UTILITY = 4;

const int IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF = 0;

const int IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON = 1;

const int IOPOL_VFS_CONTENT_PROTECTION_DEFAULT = 0;

const int IOPOL_VFS_CONTENT_PROTECTION_IGNORE = 1;

const int IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT = 0;

const int IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON = 1;

const int IOPOL_VFS_IGNORE_PERMISSIONS_OFF = 0;

const int IOPOL_VFS_IGNORE_PERMISSIONS_ON = 1;

const int IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT = 0;

const int IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON = 1;

const int IOPOL_VFS_SKIP_MTIME_UPDATE_IGNORE = 2;

const int IOPOL_VFS_SKIP_MTIME_UPDATE_OFF = 0;

const int IOPOL_VFS_SKIP_MTIME_UPDATE_ON = 1;

const int IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = 1;

const int IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = 0;

const int IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = 0;

const int IOPOL_VFS_TRIGGER_RESOLVE_OFF = 1;

const int LC_ALL_MASK = 63;

const int LC_COLLATE_MASK = 1;

const int LC_CTYPE_MASK = 2;

const int LC_MESSAGES_MASK = 4;

const int LC_MONETARY_MASK = 8;

const int LC_NUMERIC_MASK = 16;

const int LC_TIME_MASK = 32;

const int LITTLE_ENDIAN = 1234;

const int L_ctermid = 1024;

const int L_tmpnam = 1024;

const int MAC_OS_VERSION_11_0 = 110000;

const int MAC_OS_VERSION_11_1 = 110100;

const int MAC_OS_VERSION_11_3 = 110300;

const int MAC_OS_VERSION_11_4 = 110400;

const int MAC_OS_VERSION_11_5 = 110500;

const int MAC_OS_VERSION_11_6 = 110600;

const int MAC_OS_VERSION_12_0 = 120000;

const int MAC_OS_VERSION_12_1 = 120100;

const int MAC_OS_VERSION_12_2 = 120200;

const int MAC_OS_VERSION_12_3 = 120300;

const int MAC_OS_VERSION_12_4 = 120400;

const int MAC_OS_VERSION_12_5 = 120500;

const int MAC_OS_VERSION_12_6 = 120600;

const int MAC_OS_VERSION_12_7 = 120700;

const int MAC_OS_VERSION_13_0 = 130000;

const int MAC_OS_VERSION_13_1 = 130100;

const int MAC_OS_VERSION_13_2 = 130200;

const int MAC_OS_VERSION_13_3 = 130300;

const int MAC_OS_VERSION_13_4 = 130400;

const int MAC_OS_VERSION_13_5 = 130500;

const int MAC_OS_VERSION_13_6 = 130600;

const int MAC_OS_VERSION_13_7 = 130700;

const int MAC_OS_VERSION_14_0 = 140000;

const int MAC_OS_VERSION_14_1 = 140100;

const int MAC_OS_VERSION_14_2 = 140200;

const int MAC_OS_VERSION_14_3 = 140300;

const int MAC_OS_VERSION_14_4 = 140400;

const int MAC_OS_VERSION_14_5 = 140500;

const int MAC_OS_VERSION_14_6 = 140600;

const int MAC_OS_VERSION_14_7 = 140700;

const int MAC_OS_VERSION_15_0 = 150000;

const int MAC_OS_VERSION_15_1 = 150100;

const int MAC_OS_VERSION_15_2 = 150200;

const int MAC_OS_VERSION_15_3 = 150300;

const int MAC_OS_VERSION_15_4 = 150400;

const int MAC_OS_X_VERSION_10_0 = 1000;

const int MAC_OS_X_VERSION_10_1 = 1010;

const int MAC_OS_X_VERSION_10_10 = 101000;

const int MAC_OS_X_VERSION_10_10_2 = 101002;

const int MAC_OS_X_VERSION_10_10_3 = 101003;

const int MAC_OS_X_VERSION_10_11 = 101100;

const int MAC_OS_X_VERSION_10_11_2 = 101102;

const int MAC_OS_X_VERSION_10_11_3 = 101103;

const int MAC_OS_X_VERSION_10_11_4 = 101104;

const int MAC_OS_X_VERSION_10_12 = 101200;

const int MAC_OS_X_VERSION_10_12_1 = 101201;

const int MAC_OS_X_VERSION_10_12_2 = 101202;

const int MAC_OS_X_VERSION_10_12_4 = 101204;

const int MAC_OS_X_VERSION_10_13 = 101300;

const int MAC_OS_X_VERSION_10_13_1 = 101301;

const int MAC_OS_X_VERSION_10_13_2 = 101302;

const int MAC_OS_X_VERSION_10_13_4 = 101304;

const int MAC_OS_X_VERSION_10_14 = 101400;

const int MAC_OS_X_VERSION_10_14_1 = 101401;

const int MAC_OS_X_VERSION_10_14_4 = 101404;

const int MAC_OS_X_VERSION_10_14_5 = 101405;

const int MAC_OS_X_VERSION_10_14_6 = 101406;

const int MAC_OS_X_VERSION_10_15 = 101500;

const int MAC_OS_X_VERSION_10_15_1 = 101501;

const int MAC_OS_X_VERSION_10_15_4 = 101504;

const int MAC_OS_X_VERSION_10_16 = 101600;

const int MAC_OS_X_VERSION_10_2 = 1020;

const int MAC_OS_X_VERSION_10_3 = 1030;

const int MAC_OS_X_VERSION_10_4 = 1040;

const int MAC_OS_X_VERSION_10_5 = 1050;

const int MAC_OS_X_VERSION_10_6 = 1060;

const int MAC_OS_X_VERSION_10_7 = 1070;

const int MAC_OS_X_VERSION_10_8 = 1080;

const int MAC_OS_X_VERSION_10_9 = 1090;

const int MINSIGSTKSZ = 32768;

const int M_BIONIC_SET_HEAP_TAGGING_LEVEL = -204;

const int M_BIONIC_ZERO_INIT = -203;

const int M_CACHE_COUNT_MAX = -200;

const int M_CACHE_SIZE_MAX = -201;

const int M_DECAY_TIME = -100;

const int M_HEAP_TAGGING_LEVEL_ASYNC = 2;

const int M_HEAP_TAGGING_LEVEL_NONE = 0;

const int M_HEAP_TAGGING_LEVEL_SYNC = 3;

const int M_HEAP_TAGGING_LEVEL_TBI = 1;

const int M_MEMTAG_TUNING = -102;

const int M_MEMTAG_TUNING_BUFFER_OVERFLOW = 0;

const int M_MEMTAG_TUNING_UAF = 1;

const int M_PURGE = -101;

const int M_PURGE_ALL = -104;

const int M_THREAD_DISABLE_MEM_INIT = -103;

const int M_TSDS_COUNT_MAX = -202;

const int NBBY = 8;

const int NFDBITS = 32;

const int NSIG = 32;

const int NULL = 0;

const int PDP_ENDIAN = 3412;

const int POLL_ERR = 4;

const int POLL_HUP = 6;

const int POLL_IN = 1;

const int POLL_MSG = 3;

const int POLL_OUT = 2;

const int POLL_PRI = 5;

const int PRIO_DARWIN_BG = 4096;

const int PRIO_DARWIN_NONUI = 4097;

const int PRIO_DARWIN_PROCESS = 4;

const int PRIO_DARWIN_THREAD = 3;

const int PRIO_MAX = 20;

const int PRIO_MIN = -20;

const int PRIO_PGRP = 1;

const int PRIO_PROCESS = 0;

const int PRIO_USER = 2;

const int PTRDIFF_MAX = 9223372036854775807;

const int PTRDIFF_MIN = -9223372036854775808;

const String P_tmpdir = '/var/tmp/';

const int RAND_MAX = 2147483647;

const int RENAME_EXCL = 4;

const int RENAME_NOFOLLOW_ANY = 16;

const int RENAME_RESERVED1 = 8;

const int RENAME_SECLUDE = 1;

const int RENAME_SWAP = 2;

const int RLIMIT_AS = 5;

const int RLIMIT_CORE = 4;

const int RLIMIT_CPU = 0;

const int RLIMIT_CPU_USAGE_MONITOR = 2;

const int RLIMIT_DATA = 2;

const int RLIMIT_FOOTPRINT_INTERVAL = 4;

const int RLIMIT_FSIZE = 1;

const int RLIMIT_MEMLOCK = 6;

const int RLIMIT_NOFILE = 8;

const int RLIMIT_NPROC = 7;

const int RLIMIT_RSS = 5;

const int RLIMIT_STACK = 3;

const int RLIMIT_THREAD_CPULIMITS = 3;

const int RLIMIT_WAKEUPS_MONITOR = 1;

const int RLIM_INFINITY = 9223372036854775807;

const int RLIM_NLIMITS = 9;

const int RLIM_SAVED_CUR = 9223372036854775807;

const int RLIM_SAVED_MAX = 9223372036854775807;

const int RSIZE_MAX = 9223372036854775807;

const int RUSAGE_CHILDREN = -1;

const int RUSAGE_INFO_CURRENT = 6;

const int RUSAGE_INFO_V0 = 0;

const int RUSAGE_INFO_V1 = 1;

const int RUSAGE_INFO_V2 = 2;

const int RUSAGE_INFO_V3 = 3;

const int RUSAGE_INFO_V4 = 4;

const int RUSAGE_INFO_V5 = 5;

const int RUSAGE_INFO_V6 = 6;

const int RUSAGE_SELF = 0;

const int RU_PROC_RUNS_RESLIDE = 1;

const int SA_64REGSET = 512;

const int SA_NOCLDSTOP = 8;

const int SA_NOCLDWAIT = 32;

const int SA_NODEFER = 16;

const int SA_ONSTACK = 1;

const int SA_RESETHAND = 4;

const int SA_RESTART = 2;

const int SA_SIGINFO = 64;

const int SA_USERSPACE_MASK = 127;

const int SA_USERTRAMP = 256;

const int SEEK_CUR = 1;

const int SEEK_DATA = 4;

const int SEEK_END = 2;

const int SEEK_HOLE = 3;

const int SEEK_SET = 0;

const int SEGV_ACCERR = 2;

const int SEGV_MAPERR = 1;

const int SEGV_NOOP = 0;

const int SIGABRT = 6;

const int SIGALRM = 14;

const int SIGBUS = 10;

const int SIGCHLD = 20;

const int SIGCONT = 19;

const int SIGEMT = 7;

const int SIGEV_NONE = 0;

const int SIGEV_SIGNAL = 1;

const int SIGEV_THREAD = 3;

const int SIGFPE = 8;

const int SIGHUP = 1;

const int SIGILL = 4;

const int SIGINFO = 29;

const int SIGINT = 2;

const int SIGIO = 23;

const int SIGIOT = 6;

const int SIGKILL = 9;

const int SIGPIPE = 13;

const int SIGPROF = 27;

const int SIGQUIT = 3;

const int SIGSEGV = 11;

const int SIGSTKSZ = 131072;

const int SIGSTOP = 17;

const int SIGSYS = 12;

const int SIGTERM = 15;

const int SIGTRAP = 5;

const int SIGTSTP = 18;

const int SIGTTIN = 21;

const int SIGTTOU = 22;

const int SIGURG = 16;

const int SIGUSR1 = 30;

const int SIGUSR2 = 31;

const int SIGVTALRM = 26;

const int SIGWINCH = 28;

const int SIGXCPU = 24;

const int SIGXFSZ = 25;

const int SIG_ATOMIC_MAX = 2147483647;

const int SIG_ATOMIC_MIN = -2147483648;

const int SIG_BLOCK = 1;

const int SIG_SETMASK = 3;

const int SIG_UNBLOCK = 2;

const int SIZE_MAX = -1;

const int SI_ASYNCIO = 65540;

const int SI_MESGQ = 65541;

const int SI_QUEUE = 65538;

const int SI_TIMER = 65539;

const int SI_USER = 65537;

const int SS_DISABLE = 4;

const int SS_ONSTACK = 1;

const int STRUCT_MALLINFO_DECLARED = 1;

const int SV_INTERRUPT = 2;

const int SV_NOCLDSTOP = 8;

const int SV_NODEFER = 16;

const int SV_ONSTACK = 1;

const int SV_RESETHAND = 4;

const int SV_SIGINFO = 64;

const int TMP_MAX = 308915776;

const int TRAP_BRKPT = 1;

const int TRAP_TRACE = 2;

const int UINT16_MAX = 65535;

const int UINT32_MAX = 4294967295;

const int UINT64_MAX = -1;

const int UINT8_MAX = 255;

const int UINTMAX_MAX = -1;

const int UINTPTR_MAX = -1;

const int UINT_FAST16_MAX = 65535;

const int UINT_FAST32_MAX = 4294967295;

const int UINT_FAST64_MAX = -1;

const int UINT_FAST8_MAX = 255;

const int UINT_LEAST16_MAX = 65535;

const int UINT_LEAST32_MAX = 4294967295;

const int UINT_LEAST64_MAX = -1;

const int UINT_LEAST8_MAX = 255;

const int USER_ADDR_NULL = 0;

const int UTIME_NOW = 1073741823;

const int UTIME_OMIT = 1073741822;

const int WAIT_ANY = -1;

const int WAIT_MYPGRP = 0;

const int WAKEMON_DISABLE = 2;

const int WAKEMON_ENABLE = 1;

const int WAKEMON_GET_PARAMS = 4;

const int WAKEMON_MAKE_FATAL = 16;

const int WAKEMON_SET_DEFAULTS = 8;

const int WCHAR_MAX = 2147483647;

const int WCHAR_MIN = -2147483648;

const int WCONTINUED = 16;

const int WCOREFLAG = 128;

const int WEXITED = 4;

const int WINT_MAX = 2147483647;

const int WINT_MIN = -2147483648;

const int WNOHANG = 1;

const int WNOWAIT = 32;

const int WSTOPPED = 8;

const int WUNTRACED = 2;

final class stat_t extends ffi.Opaque {}
